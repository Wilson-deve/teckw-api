"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const morgan_1 = __importDefault(require("morgan"));
const dotenv_1 = __importDefault(require("dotenv"));
const body_parser_1 = __importDefault(require("body-parser"));
const auth_1 = require("../routes/auth");
const users_1 = require("../routes/users");
const address_1 = require("../routes/address");
const notification_1 = require("../routes/notification");
const product_1 = require("../routes/product");
const order_1 = require("../routes/order");
const wishlist_1 = require("../routes/wishlist");
const cart_1 = require("../routes/cart");
const review_1 = require("../routes/review");
const category_1 = require("../routes/category");
const brand_1 = require("../routes/brand");
const swagger_1 = require("./swagger");
dotenv_1.default.config();
const app = (0, express_1.default)();
const port = Number(process.env.PORT) || 3000;
const API = process.env.API_URL;
const hostname = "0.0.0.0";
app.use(body_parser_1.default.json());
app.use((0, morgan_1.default)("tiny"));
app.use((0, cors_1.default)());
app.options("*", (0, cors_1.default)());
app.use(`${API}/auth`, auth_1.authRoutes);
app.use(`${API}/users`, users_1.userRoutes);
app.use(`${API}/users`, address_1.addressRoutes);
app.use(`${API}/users`, notification_1.notificationRoutes);
app.use(`${API}/products`, product_1.productRoutes);
app.use(`${API}/orders`, order_1.orderRoutes);
app.use(`${API}/wishlist`, wishlist_1.wishlistRoutes);
app.use(`${API}/cart`, cart_1.cartRoutes);
app.use(`${API}/reviews`, review_1.reviewRoutes);
app.use(`${API}/categories`, category_1.categoryRoutes);
app.use(`${API}/brands`, brand_1.brandRoutes);
(0, swagger_1.setupSwagger)(app);
app.listen(port, hostname, () => console.log(`TecKW API listening on http://${hostname}:${port}`));
